apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: myapp-v1-replicaset
  namespace: webapp
  labels:
    app.kubernetes.io/name: myapp
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: employeeapp
    app.kubernetes.io/instance: myapp-v1
    app.kubernetes.io/version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: myapp
      app.kubernetes.io/component: frontend
      app.kubernetes.io/part-of: employeeapp
      app.kubernetes.io/instance: myapp-v1
      app.kubernetes.io/version: v1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: myapp
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: employeeapp
        app.kubernetes.io/instance: myapp-v1
        app.kubernetes.io/version: v1
    spec:
      containers:
      - name: myapp-v1-pod
        image: 636276102612.dkr.ecr.us-east-1.amazonaws.com/app_image
        env:
        - name: DBHOST
          value: "mysql-svc.sqldb.svc.cluster.local"
        - name: DBPWD
          valueFrom:
            secretKeyRef:
              name: mydb-secret
              key: password
        - name: VERSION
          value: "v1"
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
